name: Reuse workflow 

on: 
    workflow_call:
      inputs:
        mongo-uri:
          type: string
          required: true
        environment:
          required: true
          default: dev
          type: string
        k8s-manifest-dir:
          required: true
          default: kubernetes/
          type: string
        kubectl-version:
          required: false
          default:  'v1.30.0'
          type: string 
      secrets: 
        k8s-kubeconfig: 
          required: true
        mongodb-pass: 
          required: true
      outputs:
        application-url: 
          value: ${{ jobs.reuse-deploy.outputs.PORT }}

jobs:
    resue-deploy:
      environment:
        name: ${{ inputs.environment }}
        url:  http://52.33.235.37:${{ steps.myservice.outputs.PORT }}
      outputs: 
        #SVC_URL: ${{ steps.myservice.outputs.ACTUAL_URL }}
        PORT: ${{ steps.myservice.outputs.PORT }}
      runs-on: ubuntu-latest
      steps: 
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Using Action to iNstall Kubectl
        uses: azure/setup-kubectl@v4
        with:
           version: '${{ inputs.kubectl-version }}'
      
      - name: Login using Kubeconfig File 
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: "${{ secrets.k8s-kubeconfig }}"
          context: kubernetes-admin@kubernetes

      - name: Fetch Kubernetes Cluster Details
        run: | 
          kubectl version
          echo ------
          kubectl get nodes
      
      - name: Saving Ingress IP
        continue-on-error: true 
        run: | 
           echo "INGRESS_IP="$(kubectl -n ingress-nginx get service  -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >>  $GITHUB_ENV

      - uses: cschleiden/replace-tokens@v1
        with: 
          tokenPrefix: '_{_' 
          tokenSuffix: '_}_' 
          files: '["${{ inputs.k8s-manifest-dir }}*.yaml"]' 
        env: 
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ vars.HUB_USERNAME }}/solar-system:${{ github.sha }}
          INGRESS_IP: ${{ env.INGRESS_IP }}

      - name: Printing YAML
        continue-on-error: true
        run: |
          cat ${{ inputs.k8s-manifest-dir }}*.yaml

      - name: Creating A secret becuase pod needs it 
        continue-on-error: true
        run: | 
          kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
          --from-literal=MONGO_URI=${{ inputs.mongo-uri }} \
          --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
          --from-literal=MONGO_PASSWORD=${{ secrets.mongodb-pass }} 

      - name: Deploying app 
        run: |
          kubectl apply -f ${{ inputs.k8s-manifest-dir }}
      
      - name: retriving the url of service with nodeport
        id: myservice
        run: | 
          #echo "ACTUAL_URL=$(curl -s ifconfig.me ):$(kubectl get svc  solar-system -n default -o jsonpath='{.spec.ports[0].nodePort}')" >>  $GITHUB_OUTPUT
          echo "PORT=$(kubectl get svc  solar-system -n default -o jsonpath='{.spec.ports[0].nodePort}')"  >> $GITHUB_OUTPUT
          echo $PORT